package com.example.travelactivityapp.model;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;

// This class represents the Itinerary entity

import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

@Entity // This class is an entity
@Data // Lombok annotation to generate getters and setters
@NoArgsConstructor // Lombok annotation to generate a no-args constructor
@AllArgsConstructor // Lombok annotation to generate an all-args constructor
@Builder // Lombok annotation to generate a builder
public class Itinerary {

    @Id // This field is the primary key
    @GeneratedValue(strategy = GenerationType.SEQUENCE) // This field is generated by the database
    @Column(name = "id", updatable = false, nullable = false) // This field is the id
    private Long id;

    @NotBlank(message = "Title is required") 
    @Column(name = "itineraryName", nullable = false, columnDefinition = "TEXT") // This field is the itinerary name
    private String itineraryName; 

    @NotBlank(message = "Description is required")
    @Column(name = "description", nullable = false, columnDefinition = "TEXT")
    private String description;

    @Column(name = "Start Date", nullable = false)
    private LocalDate startDate;

    @Column(name = "End Date", nullable = false)
    private LocalDate endDate;

    @JsonBackReference // Implmented to prevent infinite reference loop
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", insertable = true, updatable = true, nullable = false)
    private User user;

    @Builder.Default // Implmented to prevent infinite reference loop
    @JsonIgnore 
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
            name = "itinerary_tag",
            joinColumns = @JoinColumn(name = "itinerary_id"),
            inverseJoinColumns = @JoinColumn(name = "tag_id"))
    private Set<Tag> tags = new HashSet<>();

    @Builder.Default
    @JsonIgnore
    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
            name = "itinerary_activity",
            joinColumns = @JoinColumn(name = "itinerary_id"),
            inverseJoinColumns = @JoinColumn(name = "activity_id"))
    private Set<Activity> activities = new HashSet<>(); 
    //Set is used instead of List for faster lookup times and it does not allow duplicate elements
}
